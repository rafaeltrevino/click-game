{"ast":null,"code":"import _classCallCheck from \"/Users/rafaeltrevino/code/click-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafaeltrevino/code/click-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafaeltrevino/code/click-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafaeltrevino/code/click-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafaeltrevino/code/click-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafaeltrevino/code/click-game/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from './components/Jumbotron';\nimport GameCard from './components/GameCard';\nimport fruits from \"./fruits.json\";\nimport Wrapper from \"./components/Wrapper\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userScore: 0,\n      topScore: 0,\n      fruits: fruits\n    };\n\n    _this.printArray = function () {\n      console.log(_this.state.fruits);\n    };\n\n    _this.shuffleFruit = function () {\n      var fruitArray = _this.state.fruits;\n\n      function shuffle(array) {\n        var i = 0,\n            j = 0,\n            temp = null;\n\n        for (i = array.length - 1; i > 0; i -= 1) {\n          j = Math.floor(Math.random() * (i + 1));\n          temp = array[i];\n          array[i] = array[j];\n          array[j] = temp;\n        }\n      }\n\n      shuffle(fruitArray);\n\n      _this.setState({\n        fruits: fruitArray\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.fruits.map(function (fruit) {\n        return React.createElement(GameCard, {\n          key: fruit.id,\n          name: fruit.name,\n          image: fruit.image,\n          shuffle: _this2.shuffleFruit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/rafaeltrevino/code/click-game/src/App.js"],"names":["React","Component","Navbar","Jumbotron","GameCard","fruits","Wrapper","App","state","userScore","topScore","printArray","console","log","shuffleFruit","fruitArray","shuffle","array","i","j","temp","length","Math","floor","random","setState","map","fruit","id","name","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,CADL;AAENC,MAAAA,QAAQ,EAAE,CAFJ;AAGNL,MAAAA,MAAM,EAANA;AAHM,K;;UAMRM,U,GAAa,YAAM;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKL,KAAL,CAAWH,MAAvB;AAA+B,K;;UAEnDS,Y,GAAe,YAAM;AACnB,UAAIC,UAAU,GAAG,MAAKP,KAAL,CAAWH,MAA5B;;AACA,eAASW,OAAT,CAAkBC,KAAlB,EAAyB;AACvB,YAAIC,CAAC,GAAG,CAAR;AAAA,YAAWC,CAAC,GAAG,CAAf;AAAA,YAAkBC,IAAI,GAAG,IAAzB;;AACA,aAAKF,CAAC,GAAGD,KAAK,CAACI,MAAN,GAAe,CAAxB,EAA2BH,CAAC,GAAG,CAA/B,EAAkCA,CAAC,IAAI,CAAvC,EAA0C;AACxCC,UAAAA,CAAC,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBN,CAAC,GAAG,CAArB,CAAX,CAAJ;AACAE,UAAAA,IAAI,GAAGH,KAAK,CAACC,CAAD,CAAZ;AACAD,UAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACE,CAAD,CAAhB;AACAF,UAAAA,KAAK,CAACE,CAAD,CAAL,GAAWC,IAAX;AACD;AACF;;AACDJ,MAAAA,OAAO,CAACD,UAAD,CAAP;;AACA,YAAKU,QAAL,CAAc;AAACpB,QAAAA,MAAM,EAAEU;AAAT,OAAd;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKP,KAAL,CAAWH,MAAX,CAAkBqB,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eACxB,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,UAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,UAAA,OAAO,EAAE,MAAI,CAAChB,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAA3B,CADL,CADF,CAHF,CADF;AAkBD;;;;EA5Ceb,S;;AA+ClB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from './components/Jumbotron';\nimport GameCard from './components/GameCard';\nimport fruits from \"./fruits.json\";\nimport Wrapper from \"./components/Wrapper\";\n\nclass App extends Component {\n\n  state = {\n    userScore: 0,\n    topScore: 0,\n    fruits\n  }\n\n  printArray = () => {console.log(this.state.fruits)};\n\n  shuffleFruit = () => {\n    let fruitArray = this.state.fruits;\n    function shuffle (array) {\n      var i = 0, j = 0, temp = null\n      for (i = array.length - 1; i > 0; i -= 1) {\n        j = Math.floor(Math.random() * (i + 1))\n        temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n      }\n    }\n    shuffle(fruitArray)\n    this.setState({fruits: fruitArray})\n  };\n\n  render() {\n    return (\n      <Wrapper>\n      <Navbar />\n      <Jumbotron />\n        <div className=\"container\">\n          <div className=\"row\">\n              {this.state.fruits.map(fruit => (\n                  <GameCard\n                    key={fruit.id}\n                    name={fruit.name}\n                    image={fruit.image}\n                    shuffle={this.shuffleFruit}\n                  />\n              ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}